{
    "components": {
        "aurora_cluster": {
            "type": "ext",
            "displayname": "CK RDS Cluster - Aurora",
            "description": "Creates an Aurora RDS Cluster. Instances are created inside the cluster, which are the individual databases.",
            "cloud": "AWS",
            "ck_plugin_tier": 3,
            "resources": [
                "AWS::rds::dbcluster"
            ],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "rds:AddTagsToResource",
                        "rds:CreateDBCluster",
                        "rds:CreateDBClusterParameterGroup",
                        "rds:CreateDBClusterSnapshot",
                        "rds:CreateDBSubnetGroup",
                        "rds:DeleteDBCluster",
                        "rds:DescribeDBClusterParameterGroups",
                        "rds:DescribeDBClusterParameters",
                        "rds:DescribeDBSubnetGroups",
                        "rds:DescribeDBEngineVersions",
                        "rds:DescribeDBClusters",
                        "rds:ModifyDBCluster",
                        "rds:RemoveTagsFromResource"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "subnet_ids": {
                        "type": "array",
                        "description": "The 2 or 3 subnet IDs to create the cluster in. Setting this defines the availability zones that the cluster will be created in.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "security_group_ids": {
                        "type": "array",
                        "description": "The security group IDs to create the cluster in.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine to use for the cluster.",
                        "enum": [
                            "aurora-mysql",
                            "aurora-postgresql"
                        ]
                    },
                    "master_password": {
                        "type": "string",
                        "description": "The master password for the cluster."
                    },
                    "master_username": {
                        "type": "string",
                        "description": "The master username for the cluster."
                    },
                    "manage_master_user_password": {
                        "type": "boolean",
                        "description": "Whether you want RDS to manage the master user password for you in Secrets Manager. This disables a few capabilities, and defaults to false.",
                        "default": false
                    },
                    "global_cluster_identifier": {
                        "type": "string",
                        "description": "The global cluster identifier to associate this cluster with. This is only used for clusters that are part of an Aurora global database, and must be specified if you want one"
                    },
                    "enable_global_write_forwarding": {
                        "type": "boolean",
                        "description": "Whether you want to enable this cluster to forward writes to the primary cluster of an Aurora global database. Defaults to false if global_cluster_identifier is specified.",
                        "default": false
                    }
                },
                "required": [
                    "subnet_ids",
                    "security_group_ids",
                    "engine"
                ]
            },
            "props": {
                "domain": {
                    "type": "string",
                    "description": "The full domain for the record."
                },
                "hosted_zone_id": {
                    "type": "string",
                    "description": "The ID of the hosted zone of the alias target."
                },
                "record_type": {
                    "type": "string",
                    "description": "The type of Route53 record to deploy."
                },
                "route53_hosted_zone_id": {
                    "type": "string",
                    "description": "The ID of the hosted zone that this record lies in."
                }
            },
            "examples": [
                {
                    "displayname": "S3 Bucket Record from Base Domain",
                    "notes": "This example will create a alias record that points to an S3 bucket component named 'bucket'. The record will be a subdomain of the base domain you pass in.",
                    "definition": {
                        "type": "&route53.record",
                        "base_domain": "example.com",
                        "target_s3_bucket": "&bucket:props.name",
                        "target_s3_region": "&bucket:props.region"
                    }
                }, 
                {
                    "displayname": "API Gateway Record with Specified Zone",
                    "notes": "Passing in the hosted zone ID allows you to specify the zone you want the record created in, which is especially useful if you are using private hosted zones. This example will create a record that points to an API Gateway endpoint, where the API custom domain already exists.",
                    "definition": {
                        "type": "&route53.record",
                        "domain": "api.example.com",
                        "target_api_hosted_zone_id": "Z2FDTNDATAQYW2",
                        "target_api_domain_name": "api.example.com",
                        "route53_hosted_zone_id": "Z2FDTNDATAQYW3"
                    }
                },
                {
                    "displayname": "Cloudfront Record",
                    "notes": "Simple example for routing to an existing cloudfront component.",
                    "definition": {
                        "type": "&route53.record",
                        "domain": "some.domain.com",
                        "target_cloudfront_domain_name": "&dist:props.domain_name"
                    }
                }
            ]
        }
    }
}
